===============================
test cases for 1-my_list module
===============================

===============================
a class MyList that inherits from list
Public instance method: ``def print_sorted(self):`` that prints the list, but sorted (ascending sort).
You can assume that all the elements of the list will be of type int
===================================

>>> # importing the ``MyList`` class
>>> MyList = __import__('1-my_list').MyList

>>> # importing the ``print_sorted()`` function
>>> print_sorted = __import__('1-my_list').MyList.print_sorted

>>> # checking module docstring
>>> module_docstring = __import__('1-my_list').__doc__
>>> len(module_docstring) > 1
True

>>> # checking class docstring
>>> class_docstring = __import__('1-my_list').MyList.__doc__
>>> len(class_docstring) > 1
True

>>> # checking function docstring
>>> function_docstring = print_sorted.__doc__
>>> len(function_docstring) > 1
True

>>> # checking MyList if it inherits from list
>>> issubclass(MyList, list)
True

>>> # checking empty list
>>> empty_list = MyList()
>>> empty_list.print_sorted()
[]

>>> # checking appending
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]

>>> # checking order
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]

>>> # checking print after
>>> print(my_list)
[1, 4, 2, 3, 5]

>>> # checking reversed order list
>>> my_list = MyList()
>>> my_list.append(5)
>>> my_list.append(4)
>>> my_list.append(3)
>>> my_list.append(2)
>>> my_list.append(1)
>>> print(my_list)
[5, 4, 3, 2, 1]

>>> # checking order
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]

>>> # checking print
>>> print(my_list)
[5, 4, 3, 2, 1]

>>> # checking appending negative numbers
>>> my_list = MyList()
>>> my_list.append(-4)
>>> my_list.append(-2)
>>> my_list.append(-5)
>>> my_list.append(-3)
>>> my_list.append(-1)
>>> print(my_list)
[-4, -2, -5, -3, -1]

>>> # checking order
>>> my_list.print_sorted()
[-5, -4, -3, -2, -1]

>>> # checking print
>>> print(my_list)
[-4, -2, -5, -3, -1]

>>> # checking too many arguments
>>> my_list.print_sorted(0, 1)
Traceback (most recent call last):
...
TypeError: print_sorted() takes 1 positional argument but 3 were given
