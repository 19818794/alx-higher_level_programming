=========================================
test cases for 101-lazy_matrix_mul module 
=========================================

======================================
a function that multiplies 2 matrices by using the module NumPy.

Prototype: ``def lazy_matrix_mul(m_a, m_b):``
=======================================

>>> # importing the ``lazy_matrix_mul()`` function
>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

>>> module_doc = __import__('101-lazy_matrix_mul').__doc__
>>> len(module_doc) > 3
True

>>> function_doc = lazy_matrix_mul.__doc__
>>> len(function_doc) > 3
True

>>> lazy_matrix_mul([[1, 2, 3]], [[4, 5], [6, 7], [8, 9]])
[[40, 46]]

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]])
[[19, 22], [43, 50]]

>>> lazy_matrix_mul([[1, 2], [3, 4], [3, 4]], [[5, 6, 1], [7, 8, 2]])
[[19, 22, 5], [43, 50, 11], [43, 50, 11]]

>>> lazy_matrix_mul("Holberton", [[5, 6], [7, 8]])
Traceback (most recent call last):
...
ValueError: Scalar operands are not allowed, use '*' instead

>>> lazy_matrix_mul([[5, 6], [7, 8]], "Holberton")
Traceback (most recent call last):
...
ValueError: Scalar operands are not allowed, use '*' instead

>>> lazy_matrix_mul([[5, "6"], [7, 8]], [[5, 6], [7, 8]])
Traceback (most recent call last):
...
TypeError: invalid data type for einsum

>>> lazy_matrix_mul([[5, 6], [7, 8]], [[5, "6"], [7, 8]])
Traceback (most recent call last):
...
TypeError: invalid data type for einsum
